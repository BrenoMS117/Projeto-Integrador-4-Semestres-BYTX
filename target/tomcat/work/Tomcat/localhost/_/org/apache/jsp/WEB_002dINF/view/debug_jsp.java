/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2025-09-07 23:39:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import br.com.bytx.util.CriptografiaUtil;

public final class debug_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Debug - Teste de Hash</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body { font-family: Arial, sans-serif; margin: 20px; }\r\n");
      out.write("        pre { background: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\r\n");
      out.write("        code { background: #eee; padding: 2px 5px; border-radius: 3px; }\r\n");
      out.write("        .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h1>ðŸ”§ Teste de Hash BCrypt - Debug</h1>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"section\">\r\n");
      out.write("        <h2>Testar Hash</h2>\r\n");
      out.write("        <form method=\"post\">\r\n");
      out.write("            <div>\r\n");
      out.write("                <label>Senha: <input type=\"text\" name=\"senha\" value=\"admin123\"></label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <label>Hash: <input type=\"text\" name=\"hash\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.hash}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" size=\"70\"></label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <button type=\"submit\">Testar</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");

    if ("POST".equalsIgnoreCase(request.getMethod())) {
        String senha = request.getParameter("senha");
        String hash = request.getParameter("hash");

        if (senha != null && hash != null) {
            String resultado = CriptografiaUtil.testarHash(senha, hash);
    
      out.write("\r\n");
      out.write("            <div class=\"section\">\r\n");
      out.write("                <h2>Resultado do Teste:</h2>\r\n");
      out.write("                <pre>");
      out.print( resultado );
      out.write("</pre>\r\n");
      out.write("            </div>\r\n");
      out.write("    ");

        }
    }
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"section\">\r\n");
      out.write("        <h2>InformaÃ§Ãµes do Banco de Dados</h2>\r\n");
      out.write("        <p>Para verificar o hash atual no banco, execute no console H2:</p>\r\n");
      out.write("        <code>SELECT email, senha FROM usuarios WHERE email = 'admin@bytX.com';</code>\r\n");
      out.write("\r\n");
      out.write("        <p>Para atualizar o hash, execute:</p>\r\n");
      out.write("        <code>UPDATE usuarios SET senha = 'SEU_NOVO_HASH_AQUI' WHERE email = 'admin@bytX.com';</code>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"section\">\r\n");
      out.write("        <h2>Hash de Exemplo VÃ¡lido</h2>\r\n");
      out.write("        <p>Um hash BCrypt vÃ¡lido para \"admin123\" deve parecer com:</p>\r\n");
      out.write("        <code>$2a$12$r4A6aU6wz6q6q6q6q6q6qO6q6q6q6q6q6q6q6q6q6q6q6q6q6q6</code>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
